/* * =============================================
 * ARQUIVO DE ESTILO - ONG LAÇOS DE OURO
 * =============================================
 */

/* * -------------------------------------------
 * ETAPA 1: SISTEMA DE DESIGN (VARIÁVEIS)
 * Conforme Entrega II: 8 cores, 5 fontes, 6 espaçamentos 
 * -------------------------------------------
 */
:root {
    /* 1. PALETA DE 8 CORES  */
    
    /* Cores Primárias (Aconchego, Confiança) */
    --cor-primaria: #D4AF37;     /* Dourado (Laços de Ouro) */
    --cor-secundaria: #4a4a4a;   /* Cinza Escuro (para textos) */
    
    /* Cores de Feedback (para botões, alertas) */
    --cor-sucesso: #27ae60;      /* Verde (validação)  */
    --cor-erro: #e74c3c;         /* Vermelho (validação)  */
    --cor-link: #3498db;         /* Azul (links) */

    /* Cores Neutras (Fundo, Bordas) */
    --cor-fundo: #f9f9f9;        /* Um branco levemente acinzentado */
    --cor-bordas: #e0e0e0;       /* Cinza claro para bordas */
    --cor-branco: #ffffff;       /* Branco puro (para cards) */

    /* 2. TIPOGRAFIA HIERÁRQUICA (5 TAMANHOS)  */
    --fonte-titulo-gg: 2.5rem;   /* 40px - Para o <h1> principal */
    --fonte-titulo-g: 1.75rem;   /* 28px - Para os <h2> de seção */
    --fonte-titulo-m: 1.25rem;   /* 20px - Para os <h3> de cards */
    --fonte-corpo: 1rem;         /* 16px - Texto normal (base) */
    --fonte-pequena: 0.875rem;   /* 14px - Textos auxiliares, legendas */
    
    /* 3. SISTEMA DE ESPAÇAMENTO MODULAR  */
    --esp-8px: 0.5rem;    /* 8px */
    --esp-16px: 1rem;     /* 16px (base) */
    --esp-24px: 1.5rem;   /* 24px */
    --esp-32px: 2rem;     /* 32px */
    --esp-48px: 3rem;     /* 48px */
    --esp-64px: 4rem;     /* 64px */

    /* Bônus: Bordas e Sombras (para cards e botões)  */
    --border-radius: 8px;
    --sombra-suave: 0 4px 12px rgba(0, 0, 0, 0.08);
}

/* * -------------------------------------------
 * ETAPA 2: RESET E ESTILOS GLOBAIS
 * Aplicando nossas variáveis no site
 * -------------------------------------------
 */

/* Um "Reset" simples para remover estilos padrão do navegador */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* Isso torna o cálculo de tamanho muito mais fácil */
}

body {
    font-family: Arial, sans-serif;
    background-color: var(--cor-fundo);
    color: var(--cor-secundaria);
    font-size: var(--fonte-corpo);
    line-height: 1.6;
    margin: 0;
    padding: 0;

    /* --- INÍCIO DO CSS GRID --- */
    /* 1. Transforma o <body> em um container Grid */
    display: grid;
    /* 2. Define 3 linhas: 
       "auto" = a altura do <header>
       "1fr"  = o <main> vai pegar 1 fração (todo o espaço que sobrar)
       "auto" = a altura do <footer>
    */
    grid-template-rows: auto 1fr auto;
    /* 3. Garante que o layout ocupe no mínimo 100% da altura da tela */
    min-height: 100vh;
}

a {
    color: var(--cor-link);
    text-decoration: none;
    transition: color 0.3s ease;
}

a:hover {
    text-decoration: underline;
}

img {
    width: 100%; /* Faz as imagens serem responsivas por padrão */
    height: auto;
    display: block;
}

/* * -------------------------------------------
 * ETAPA 3: LEIAUTE PRINCIPAL (GRID) 
 * Vamos criar classes de layout que podemos reusar
 * -------------------------------------------
 */

/* Esta classe vai centralizar nosso conteúdo */
.container {
    width: 90%;
    max-width: 1100px;
    margin: 0 auto; /* O truque para centralizar horizontalmente */
    padding-top: var(--esp-32px);
    padding-bottom: var(--esp-32px);
}
/* * -------------------------------------------
 * ETAPA 4: CABEÇALHO (HEADER) E NAVEGAÇÃO (NAV)
 * -------------------------------------------
 */

header {
    background-color: var(--cor-branco);
    box-shadow: var(--sombra-suave);
    padding: var(--esp-16px) 0; /* Espaçamento interno em cima/baixo */
    
    /* * O item "Navegação Sofisticada" pede um menu "sticky" (grudento).
     * Essas 3 linhas fazem o menu grudar no topo da tela quando o usuário rolar.
     */
    position: sticky;
    top: 0;
    z-index: 1000; /* Garante que ele fique na frente de tudo */
}

/* * Vamos usar Flexbox para alinhar o "Laços de Ouro" (h1)
 * de um lado e o menu (nav) do outro.
 */
header .container {
    display: flex;
    justify-content: space-between; /* Itens vão para as extremidades */
    align-items: center; /* Centraliza verticalmente */
    padding-top: 0; /* Remove o padding que colocamos no .container global */
    padding-bottom: 0;
}

/* Estilo para o nosso título/logo (h1) */
header h1 {
    font-size: var(--fonte-titulo-gg); /* Um tamanho médio para o logo */
    color: var(--cor-primaria); /* Cor dourada! */
    margin: 0; /* Remove a margem padrão do h1 */
}

/* --- Estilos do Menu de Navegação --- */

nav ul {
    /* * A "Entrega II" pede Flexbox para componentes.
     * Aqui usamos Flexbox para deixar o menu na horizontal.
     */
    display: flex;
    list-style: none; /* Remove as "bolinhas" da lista */
}

nav ul li a {
    display: block; /* Transforma o link em um bloco clicável */
    padding: var(--esp-24px) var(--esp-16px);
    color: var(--cor-secundaria);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
}

/* Efeito :hover para os links do menu */
nav ul li a:hover {
    background-color: var(--cor-fundo); /* Fundo cinza-claro */
    color: var(--cor-primaria); /* Texto dourado */
}
/* ... logo após o nav ul li a:hover ... */

/* --- Estilos do Menu Dropdown --- */

/* 1. Precisamos que o <li> pai seja "relative" 
      para o submenu "absolute" flutuar abaixo dele. */
.menu-dropdown {
    position: relative;
}

/* 2. O submenu (<ul>) fica escondido por padrão */
.submenu {
    display: none; /* Começa escondido */
    position: absolute; /* Flutua abaixo do item pai */
    top: 100%; /* Começa exatamente onde o item pai termina */
    left: 0;
    background-color: var(--cor-branco);
    box-shadow: var(--sombra-suave);
    border-radius: 0 0 var(--border-radius) var(--border-radius);
    min-width: 200px; /* Largura mínima do submenu */
    z-index: 1100; /* Fica na frente de tudo */
}

/* 3. A MÁGICA: Quando passamos o mouse (:hover) no <li> pai,
      o .submenu que está dentro dele aparece! */
.menu-dropdown:hover .submenu {
    display: block; /* Mostra o submenu! */
}

/* 4. Estilo dos links dentro do submenu */
.submenu li {
    width: 100%;
}

.submenu li a {
    padding: var(--esp-16px);
    border-bottom: 1px solid var(--cor-bordas);
}

.submenu li:last-child a {
    border-bottom: none; /* Remove a borda do último item */
}

.submenu li a:hover {
    background-color: var(--cor-fundo);
    color: var(--cor-primaria);
}
/* * -------------------------------------------
 * ETAPA 5: CARDS DE PROJETOS (projetos.html)
 * -------------------------------------------
 */

/* O container Flexbox que segura os cards */
.projeto-lista {
    display: flex; /* ATIVA O FLEXBOX! */
    flex-wrap: wrap; /* Permite que os cards quebrem para a linha de baixo */
    gap: var(--esp-24px); /* Cria um espaço de 24px entre os cards */
    justify-content: center; /* Centraliza os cards */
}

/* O estilo de cada card */
.projeto-card {
    background-color: var(--cor-branco);
    border-radius: var(--border-radius);
    box-shadow: var(--sombra-suave);
    overflow: hidden; /* Garante que a imagem não "vaze" das bordas arredondadas */
    
    /* * A mágica do Flexbox para responsividade:
     * flex: 1 1 300px;
     * 1. flex-grow: 1 (podem crescer para ocupar espaço)
     * 2. flex-shrink: 1 (podem encolher se necessário)
     * 3. flex-basis: 300px (tentam ter uma base de 300px de largura)
     *
     * Em telas grandes, 3 cards de 300px cabem. Em telas menores,
     * eles vão quebrar a linha e se ajustar. Perfeito!
     */
    flex: 1 1 300px;
    max-width: 350px; /* Um limite para não ficarem gigantes */

    /* Efeito de transição */
    transition: all 0.3s ease;
}

.projeto-card:hover {
    transform: translateY(-5px); /* Efeito de "subir" ao passar o mouse */
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.12);
}

/* O <div> que segura o texto dentro do card */
.projeto-card-conteudo {
    padding: var(--esp-24px);
}

.projeto-card-conteudo h2 {
    font-size: var(--fonte-titulo-m);
    color: var(--cor-primaria); /* Título do card em dourado */
    margin-bottom: var(--esp-16px);
}
/* Estilo para os detalhes extras dentro do card */
.detalhe-projeto {
    font-size: var(--fonte-pequena); /* Usa nossa fonte pequena */
    color: var(--cor-secundaria); /* Cinza escuro */
    margin-bottom: var(--esp-8px); /* Espaço pequeno entre os detalhes */
    line-height: 1.4; /* Ajusta a altura da linha */
}

.detalhe-projeto strong {
    color: var(--cor-primaria); /* Deixa o "Frequência:", "Local:" em dourado */
}
/* * -------------------------------------------
 * ETAPA 6: AJUSTES DE IMAGEM
 * -------------------------------------------
 */

/* Estilo para a imagem DENTRO do card de projeto */
.projeto-card img {
    height: 200px; /* Damos uma altura fixa de 200px */
    width: 100%; /* Força a largura a ser 100% do card */
    
    /* * Esta é a propriedade mágica!
     * "object-fit: cover;" faz a imagem cobrir todo o espaço 
     * de 200px de altura, sem amassar ou distorcer (ela corta as sobras).
     */
    object-fit: cover; 
}
/* Estilo para o banner principal (index.html) */
.banner-principal {
    max-height: 400px; /* Damos uma altura MÁXIMA de 400px */
    width: 100%;
    object-fit: cover; /* A mesma mágica: cobre o espaço sem amassar */
    border-radius: var(--border-radius); /* Bordas arredondadas */
    margin-bottom: var(--esp-24px); /* Um espaço abaixo da imagem */
}
/* * -------------------------------------------
 * ETAPA 7: RESPONSIVIDADE (MOBILE)
 * -------------------------------------------
 */

/* Estilo para o botão hambúrguer */
.menu-hamburger {
    display: none; /* COMEÇA ESCONDIDO no desktop */
    width: 30px;
    height: 24px;
    position: relative;
    cursor: pointer;
}

.menu-hamburger span {
    display: block;
    position: absolute;
    height: 4px;
    width: 100%;
    background: var(--cor-secundaria);
    border-radius: 2px;
    left: 0;
    transition: all 0.3s ease;
}

/* Posição dos 3 traços */
.menu-hamburger span:nth-child(1) { top: 0px; }
.menu-hamburger span:nth-child(2) { top: 10px; }
.menu-hamburger span:nth-child(3) { top: 20px; }


/* * ===========================================
 * A MÁGICA DA MEDIA QUERY (Breakpoint)
 * "Se a tela for MENOR que 768px..."
 * ===========================================
 */
@media (max-width: 768px) {

    /* 1. Esconda o menu de links normal */
    nav {
        display: none;

        /* NOVOS ESTILOS PARA O MENU MOBILE QUANDO ABERTO */
        position: absolute; /* Faz o menu flutuar sobre o conteúdo */
        top: 60px; /* Começa logo abaixo do header (ajuste se o seu header for maior) */
        left: 0;
        width: 100%;
        background-color: var(--cor-branco);
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    /* 2. Mostre o botão hambúrguer */
    .menu-hamburger {
        display: block;
    }

    /* 3. Ajusta o layout do cabeçalho */
    header .container {
        justify-content: space-between; 
    }

    /* 4. Faz o menu (que estava em flex horizontal) ficar vertical */
    nav ul {
        flex-direction: column; /* Um item embaixo do outro */
        width: 100%;
    }

    nav ul li a {
        padding: var(--esp-16px);
        border-bottom: 1px solid var(--cor-bordas);
        text-align: center; /* Centraliza o texto */
    }

    /* * 5. A CLASSE MÁGICA!!
     * Esta classe ".menu-aberto" será adicionada pelo JavaScript.
     * Quando ela estiver presente, o menu vai aparecer!
     */
    nav.menu-aberto {
        display: flex; /* Sobrescreve o "display: none" e faz o menu aparecer! */
    }

} /* Fim da @media */
/* * ===========================================
 * MAIS BREAKPOINTS RESPONSIVOS
 * ===========================================
 */

/* Breakpoint para Tablets (e telas pequenas de desktop) 
 * "Se a tela for MAIOR que 768px..."
 */
@media (min-width: 768px) {
    
    /* Aumenta um pouco a fonte base em telas maiores */
    body {
        font-size: 1.1rem; /* Aumenta um pouco de 1rem para 1.1rem */
    }

    /* Ajusta o tamanho dos títulos para tablets */
    h1 { font-size: 2.2rem; }
    h2 { font-size: 1.6rem; }
    h3 { font-size: 1.2rem; }

    /* Faz os cards terem um tamanho base um pouco maior em tablets */
    .projeto-card {
        flex-basis: 320px; 
    }
}

/* Breakpoint para Telas Maiores (Desktops Largos)
 * "Se a tela for MAIOR que 1024px..."
 */
@media (min-width: 1024px) {

    /* Aumenta ainda mais a fonte base */
    body {
        font-size: 1.15rem; 
    }

    /* Tamanhos finais dos títulos para desktop */
    h1 { font-size: var(--fonte-titulo-gg); } /* Volta ao tamanho original GG */
    h2 { font-size: var(--fonte-titulo-g); }  /* Volta ao tamanho original G */
    h3 { font-size: var(--fonte-titulo-m); }  /* Volta ao tamanho original M */

    /* Garante que os cards tenham espaço suficiente */
    .projeto-lista {
        gap: var(--esp-32px); /* Aumenta o espaço entre os cards */
    }
    
    .projeto-card {
        flex-basis: 350px; /* Tamanho base final para desktop */
    }
}

/* * NOTA: A atividade pede 5 breakpoints. Já temos 3 implícitos:
 * 1. Mobile (até 768px) - Onde o hambúrguer aparece.
 * 2. Tablet (de 768px até 1024px) - Onde ajustamos fontes e cards.
 * 3. Desktop (acima de 1024px) - Onde ajustamos fontes e cards novamente.
 * * Podemos adicionar mais breakpoints intermediários se necessário, 
 * mas estes 3 já cobrem os principais cenários. 
 */
 /* * -------------------------------------------
 * ETAPA 8: COMPONENTE MODAL (Doação)
 * -------------------------------------------
 */

/* O fundo escuro que cobre a tela inteira */
.modal-overlay {
    display: none; /* COMEÇA ESCONDIDO */
    position: fixed; /* Fica fixo na tela */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6); /* Preto semi-transparente */
    justify-content: center; /* Centraliza o modal horizontalmente */
    align-items: center; /* Centraliza o modal verticalmente */
    z-index: 2000; /* Fica na frente de tudo, até do header */
}

/* A caixa branca do modal */
.modal-conteudo {
    background-color: var(--cor-branco);
    padding: var(--esp-32px);
    border-radius: var(--border-radius);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    max-width: 500px;
    width: 90%;
    position: relative; /* Para o botão fechar ficar absoluto a ele */
    text-align: center;
}

/* O botão 'X' para fechar */
.modal-fechar {
    position: absolute;
    top: var(--esp-8px);
    right: var(--esp-16px);
    background: none;
    border: none;
    font-size: 2rem;
    color: var(--cor-secundaria);
    cursor: pointer;
}

/* Classe que será adicionada pelo JS para MOSTRAR o modal */
.modal-overlay.modal-aberto {
    display: flex; /* Muda de 'none' para 'flex' para mostrar e centralizar */
}
/* * -------------------------------------------
 * ETAPA 9: COMPONENTE TAGS/BADGES
 * -------------------------------------------
 */

.tag {
    display: inline-block; /* Para se comportar como um bloco, mas na linha */
    padding: var(--esp-8px) var(--esp-16px);
    border-radius: 15px; /* Deixa bem arredondado */
    font-size: var(--fonte-pequena);
    font-weight: 600;
    margin-bottom: var(--esp-16px); /* Espaço abaixo da tag */
    color: var(--cor-branco); /* Texto branco por padrão */
}

/* Cor específica para a tag de Leitura */
.tag-leitura {
    background-color: var(--cor-link); /* Azul */
}

/* Cor específica para a tag de Jogos */
.tag-jogos {
    background-color: var(--cor-sucesso); /* Verde */
}
/* * ===========================================
 * MAIS BREAKPOINTS RESPONSIVOS (Refinamento)
 * ===========================================
 */

/* Breakpoint para Telas BEM Pequenas (ex: iPhone SE)
 * "Se a tela for MENOR que 480px..."
 */
@media (max-width: 480px) {
    
    /* Diminui um pouco os títulos principais em telas muito pequenas */
    h1 { font-size: 1.8rem; }
    h2 { font-size: 1.4rem; }

    /* Reduz o padding do container para dar mais espaço ao conteúdo */
    .container {
        padding-top: var(--esp-24px);
        padding-bottom: var(--esp-24px);
        width: 95%; /* Ocupa quase toda a largura */
    }

    /* Ajusta o padding do formulário em telas pequenas */
    .formulario-moderno {
        padding: var(--esp-24px);
        margin: var(--esp-24px) auto;
    }

    /* Faz o card ocupar a largura total em telas muito estreitas */
    .projeto-card {
        flex-basis: 100%; /* Ocupa a largura inteira */
        max-width: none; /* Remove o limite máximo */
    }
}


/* Breakpoint para Telas BEM Largas (ex: Monitores grandes)
 * "Se a tela for MAIOR que 1200px..."
 */
@media (min-width: 1200px) {
    
    /* Aumenta a largura máxima do container para o conteúdo "respirar" */
    .container {
        max-width: 1140px; 
    }

    /* Podemos fazer 3 cards caberem confortavelmente lado a lado */
    .projeto-card {
        flex-basis: 31%; /* Ajuste fino para caber 3 com o 'gap' */
        max-width: 31%;
    }
}
/* * -------------------------------------------
 * ETAPA 10: SISTEMA DE GRID CUSTOMIZADO (12 COLUNAS)
 * -------------------------------------------
 */

/* A classe "row" (linha) será o container Flexbox para nossas colunas */
.row {
    display: flex;
    flex-wrap: wrap; /* Permite que as colunas quebrem em telas pequenas */
    
    /* Cria um espaçamento negativo para compensar o padding das colunas */
    margin-left: calc(-1 * var(--esp-16px) / 2); 
    margin-right: calc(-1 * var(--esp-16px) / 2);
}

/* Estilo padrão para TODAS as colunas (col-*) */
[class^="col-"] { /* Seletor chique: Pega todas as classes que COMEÇAM com "col-" */
    width: 100%; /* Por padrão (mobile-first), ocupa 100% da largura */
    
    /* Cria o espaçamento (gutter) entre as colunas */
    padding-left: calc(var(--esp-16px) / 2);
    padding-right: calc(var(--esp-16px) / 2);
    
    margin-bottom: var(--esp-16px); /* Espaço abaixo das colunas */
}


/* * Gera as classes de .col-1 a .col-12 para telas MAIORES (Desktop)
 * Usaremos um breakpoint (min-width: 768px) para ativar as colunas lado a lado.
 */
@media (min-width: 768px) {
    .col-1 { width: calc(100% / 12 * 1); }
    .col-2 { width: calc(100% / 12 * 2); }
    .col-3 { width: calc(100% / 12 * 3); }
    .col-4 { width: calc(100% / 12 * 4); }
    .col-5 { width: calc(100% / 12 * 5); }
    .col-6 { width: calc(100% / 12 * 6); } /* Metade da largura */
    .col-7 { width: calc(100% / 12 * 7); }
    .col-8 { width: calc(100% / 12 * 8); }
    .col-9 { width: calc(100% / 12 * 9); }
    .col-10 { width: calc(100% / 12 * 10); }
    .col-11 { width: calc(100% / 12 * 11); }
    .col-12 { width: calc(100% / 12 * 12); } /* Largura total */
}
/* * -------------------------------------------
 * ETAPA 11: ESTILOS PARA VALIDAÇÃO JS
 * -------------------------------------------
 */

/* Garante que cada "linha" do formulário (label + input + erro) tenha espaço */
.formulario-moderno fieldset div {
    margin-bottom: var(--esp-16px); /* Adiciona espaço abaixo de cada campo */
}

/* FORÇA O LABEL A OCUPAR SUA PRÓPRIA LINHA */
.formulario-moderno label {
    display: block; /* Faz o label ocupar 100% da largura */
    margin-bottom: var(--esp-8px); /* Espaço entre o label e o input */
    font-weight: 600; /* Deixa o label em negrito (opcional) */
}

/* Garante que o input ocupe 100% (já deve estar ok com .campo-entrada) */
/* .campo-entrada { width: 100%; ... } */

/* REFORÇA QUE A MENSAGEM DE ERRO OCUPA SUA PRÓPRIA LINHA */
.mensagem-erro {
    color: var(--cor-erro);
    font-size: var(--fonte-pequena);
    display: block; /* <<< ESTA LINHA É A CHAVE! Força a ficar embaixo */
    min-height: 1.2em; 
    margin-top: var(--esp-8px);
}

/* Estilo do input com erro (você já tem isso) */
input.erro-validacao {
    border-color: var(--cor-erro);
    box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
}
/* * -------------------------------------------
 * ETAPA 12: ESTILOS ADICIONAIS (INDEX.HTML)
 * -------------------------------------------
 */

/* --- Seção Hero (Banner Principal) --- */
.hero {
    display: flex; /* Alinha texto e imagem lado a lado */
    align-items: center; /* Centraliza verticalmente */
    gap: var(--esp-32px); /* Espaço entre texto e imagem */
    flex-wrap: wrap; /* Permite quebrar em telas menores */
}

.hero-content {
    flex: 1 1 50%; /* Tenta ocupar 50% da largura */
    min-width: 300px; /* Largura mínima antes de quebrar */
}

.hero-image {
    flex: 1 1 40%; /* Tenta ocupar 40% da largura */
    min-width: 300px;
}

.hero-actions {
    margin-top: var(--esp-24px);
    display: flex;
    gap: var(--esp-16px); /* Espaço entre os botões */
    flex-wrap: wrap; /* Permite quebrar botões em telas pequenas */
}

/* --- ESTILOS DO BOTÃO --- */

/* Regra base para TODOS os botões e links com a classe .botao */
.botao {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.875rem 2rem;
    font-weight: 600;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    border: none;
    font-size: var(--fonte-corpo);
    line-height: 1.5;
    text-align: center;
}

/* Estilo específico para o botão primário (dourado) */
.botao-primario {
    background: var(--cor-primaria);
    color: var(--cor-branco);
}
.botao-primario:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(192, 154, 108, 0.4); /* Sombra dourada */
}

/* Estilo específico para o botão secundário (transparente com borda) */
.botao-secundario {
    background-color: transparent;
    color: var(--cor-primaria);
    border: 2px solid var(--cor-primaria);
}
.botao-secundario:hover {
    background-color: var(--cor-primaria);
    color: var(--cor-branco);
    transform: translateY(-2px);
}

/* Regra para fazer o botão DENTRO do formulário ocupar 100% da largura */
.formulario-moderno .botao {
    width: 100%;
}
/* FIM DOS ESTILOS DE BOTÃO */


/* --- Seção Impacto em Números --- */
.impacto {
    text-align: center;
    background-color: var(--cor-branco); /* Fundo branco para destacar */
    padding-top: var(--esp-48px);
    padding-bottom: var(--esp-48px);
    border-radius: var(--border-radius);
    box-shadow: var(--sombra-suave);
    margin-top: var(--esp-32px);
    margin-bottom: var(--esp-32px);
}

.impacto h2 {
    margin-bottom: var(--esp-32px);
    color: var(--cor-primaria);
}

.impacto-grid {
    display: flex;
    justify-content: space-around; /* Espaça os itens igualmente */
    flex-wrap: wrap;
    gap: var(--esp-24px);
}

.impacto-item {
    display: flex;
    flex-direction: column;
}

.impacto-item .numero {
    font-size: var(--fonte-titulo-gg);
    font-weight: 700;
    color: var(--cor-primaria);
    line-height: 1;
}

.impacto-item .descricao {
    font-size: var(--fonte-pequena);
    color: var(--cor-secundaria);
}

/* --- Seção Depoimentos --- */
.depoimentos {
    text-align: center;
    margin-top: var(--esp-32px);
    margin-bottom: var(--esp-32px);
}

.depoimentos h2 {
     margin-bottom: var(--esp-32px);
}

.depoimento-grid {
    display: flex;
    flex-wrap: wrap;
    gap: var(--esp-24px);
    justify-content: center;
}

.depoimento-item {
    flex: 1 1 350px; /* Similar aos cards */
    max-width: 400px;
    background-color: var(--cor-branco);
    padding: var(--esp-24px);
    border-radius: var(--border-radius);
    box-shadow: var(--sombra-suave);
    border-left: 5px solid var(--cor-primaria); /* Detalhe dourado */
    text-align: left;
    margin-bottom: 0; /* Remove margem padrão do blockquote */
}

.depoimento-item p {
    font-style: italic;
    margin-bottom: var(--esp-16px);
}

.depoimento-item footer {
    font-size: var(--fonte-pequena);
    font-weight: 600;
    color: var(--cor-primaria);
}

/* --- Seção Como Doar --- */
.como-doar {
    text-align: center;
    background-color: var(--cor-secundaria); /* Fundo escuro para contraste */
    color: var(--cor-fundo); /* Texto claro */
    padding-top: var(--esp-48px);
    padding-bottom: var(--esp-48px);
    border-radius: var(--border-radius);
    margin-top: var(--esp-32px);
    margin-bottom: var(--esp-32px);
}

.como-doar h2 {
    color: var(--cor-primaria); /* Título dourado */
    margin-bottom: var(--esp-16px);
}

.como-doar p {
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: var(--esp-24px);
}

/* Ajuste nos breakpoints para as novas seções */
@media (max-width: 768px) {
    .hero {
        flex-direction: column-reverse; /* Imagem vai para cima no mobile */
    }
    .impacto-grid {
        flex-direction: column; /* Números um embaixo do outro */
        gap: var(--esp-32px);
    }
    .depoimento-grid {
        flex-direction: column;
        align-items: center;
    }
}
